# Generated by Django 4.2 on 2025-03-24 03:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Phone Number"
                    ),
                ),
                (
                    "identification",
                    models.CharField(
                        blank=True,
                        help_text="National ID or passport",
                        max_length=20,
                        verbose_name="ID Number",
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "monthly_income",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Monthly Income",
                    ),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Occupation"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                (
                    "verification_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Verification Date"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ClientProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reference_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Reference Name"
                    ),
                ),
                (
                    "reference_phone",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Reference Phone"
                    ),
                ),
                (
                    "reference_relationship",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Relationship"
                    ),
                ),
                (
                    "employer_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Employer"
                    ),
                ),
                (
                    "employer_phone",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Employer Phone"
                    ),
                ),
                (
                    "employment_duration",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Years of Employment"
                    ),
                ),
                (
                    "has_existing_loans",
                    models.BooleanField(
                        default=False, verbose_name="Has Existing Loans"
                    ),
                ),
                (
                    "credit_score",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Credit Score"
                    ),
                ),
                (
                    "id_scan",
                    models.FileField(
                        blank=True,
                        upload_to="client_docs/id_scans/",
                        verbose_name="ID Scan",
                    ),
                ),
                (
                    "income_proof",
                    models.FileField(
                        blank=True,
                        upload_to="client_docs/income_proofs/",
                        verbose_name="Income Proof",
                    ),
                ),
                (
                    "additional_document",
                    models.FileField(
                        blank=True,
                        upload_to="client_docs/additional/",
                        verbose_name="Additional Document",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Client Profile",
                "verbose_name_plural": "Client Profiles",
            },
        ),
        migrations.CreateModel(
            name="ClientInteraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("call", "Phone Call"),
                            ("email", "Email"),
                            ("meeting", "In-Person Meeting"),
                            ("message", "Message"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Type",
                    ),
                ),
                (
                    "interaction_date",
                    models.DateTimeField(verbose_name="Date and Time"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_interactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Client Interaction",
                "verbose_name_plural": "Client Interactions",
                "ordering": ["-interaction_date"],
            },
        ),
    ]
