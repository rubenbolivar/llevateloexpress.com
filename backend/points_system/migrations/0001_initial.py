# Generated by Django 4.2 on 2025-03-24 03:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("payments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PointsConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "initial_points",
                    models.IntegerField(default=100, verbose_name="Initial Points"),
                ),
                (
                    "on_time_payment_points",
                    models.IntegerField(
                        default=5, verbose_name="Points for On-Time Payment"
                    ),
                ),
                (
                    "late_payment_points",
                    models.IntegerField(
                        default=0, verbose_name="Points for Late Payment (1-5 days)"
                    ),
                ),
                (
                    "very_late_payment_points",
                    models.IntegerField(
                        default=-10,
                        verbose_name="Points for Very Late Payment (>5 days)",
                    ),
                ),
                (
                    "advance_payment_points",
                    models.IntegerField(
                        default=3, verbose_name="Points for Advance Payment"
                    ),
                ),
                (
                    "double_payment_points",
                    models.IntegerField(
                        default=7, verbose_name="Points for Double Payment"
                    ),
                ),
                (
                    "educational_course_points",
                    models.IntegerField(
                        default=10, verbose_name="Points for Educational Course"
                    ),
                ),
                (
                    "excellent_threshold",
                    models.IntegerField(
                        default=100, verbose_name="Excellent Standing Threshold"
                    ),
                ),
                (
                    "good_threshold",
                    models.IntegerField(
                        default=80, verbose_name="Good Standing Threshold"
                    ),
                ),
                (
                    "average_threshold",
                    models.IntegerField(
                        default=60, verbose_name="Average Standing Threshold"
                    ),
                ),
                (
                    "poor_threshold",
                    models.IntegerField(
                        default=40, verbose_name="Poor Standing Threshold"
                    ),
                ),
                (
                    "excellent_waiting_days",
                    models.IntegerField(
                        default=0, verbose_name="Waiting Days for Excellent Standing"
                    ),
                ),
                (
                    "good_waiting_days",
                    models.IntegerField(
                        default=7, verbose_name="Waiting Days for Good Standing"
                    ),
                ),
                (
                    "average_waiting_days",
                    models.IntegerField(
                        default=15, verbose_name="Waiting Days for Average Standing"
                    ),
                ),
                (
                    "poor_waiting_days",
                    models.IntegerField(
                        default=30, verbose_name="Waiting Days for Poor Standing"
                    ),
                ),
                (
                    "bad_waiting_days",
                    models.IntegerField(
                        default=45, verbose_name="Waiting Days for Bad Standing"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Points Configuration",
                "verbose_name_plural": "Points Configurations",
            },
        ),
        migrations.CreateModel(
            name="UserPointsSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_points",
                    models.IntegerField(default=0, verbose_name="Current Points"),
                ),
                (
                    "lifetime_points",
                    models.IntegerField(
                        default=0, verbose_name="Lifetime Points Earned"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="points_summary",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Points Summary",
                "verbose_name_plural": "User Points Summaries",
            },
        ),
        migrations.CreateModel(
            name="PointTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("initial", "Initial Points"),
                            ("on_time_payment", "On-Time Payment"),
                            ("late_payment", "Late Payment (1-5 days)"),
                            ("very_late_payment", "Very Late Payment (>5 days)"),
                            ("advance_payment", "Advance Payment"),
                            ("double_payment", "Double Payment"),
                            ("educational_course", "Educational Course"),
                            ("manual_adjustment", "Manual Adjustment"),
                        ],
                        max_length=30,
                        verbose_name="Transaction Type",
                    ),
                ),
                ("points_amount", models.IntegerField(verbose_name="Points Amount")),
                ("reason", models.TextField(blank=True, verbose_name="Reason")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_point_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="point_transactions",
                        to="payments.payment",
                        verbose_name="Related Payment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="point_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Point Transaction",
                "verbose_name_plural": "Point Transactions",
                "ordering": ["-created_at"],
            },
        ),
    ]
